if (isNeedFindModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.android.compileSdkversions
    buildToolsVersion rootProject.ext.android.buildToolsversions

    defaultConfig {
        if (isNeedFindModule.toBoolean()) {
            applicationId "com.example.find"
        }
        minSdkVersion rootProject.ext.android.minSdkversions
        targetSdkVersion rootProject.ext.android.targetSdkversions
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = ['src/main/res']

            if (isNeedChatModule.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':commonlib')
    implementation project(':bdmaplibrary')

    // 引入butterknife
    implementation 'com.android.support:support-v4:27.1.1'
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    // 引入arouter
    annotationProcessor(rootProject.ext.dependencies["arouter-compiler"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    //引入dagger2和dagger2-android
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]
}
